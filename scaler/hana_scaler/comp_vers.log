Comparsion of /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler and /adaqfs/home/a-onl/gmp/scaler/hana_scaler at Mon Feb 13 11:50:38 EST 2017
< in /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler,  > in /adaqfs/home/a-onl/gmp/scaler/hana_scaler
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/haScal_LinkDef.h ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/Makefile ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/THaScalDict.C ******
 
 
File THaScalDict.C not found in /adaqfs/home/a-onl/gmp/scaler/hana_scaler !!
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/THaScalDict.h ******
 
 
File THaScalDict.h not found in /adaqfs/home/a-onl/gmp/scaler/hana_scaler !!
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/THaScaler.C ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/THaScalerDB.C ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/THaScalerDB.h ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/THaScalerGui.C ******
 
6c6
< //   version Oct 2014
---
> //   version Jan 2005
8c8
< //   author  Barak Schmookler (baraks@jlab.org)
---
> //   author  Robert Michaels (rom@jlab.org)
15,18c15,16
< //#define YBOXSMALL    460
< #define YBOXSMALL    1000
< #define YBOXBIG      1000
< //#define YBOXBIG      1000
---
> #define YBOXSMALL    460
> #define YBOXBIG      700
38,42d35
< #include <TGResourcePool.h>
< #include "TGraph.h"
< #include "TH2.h"
< #include "TMath.h"
< 
46,49d38
< //Colors
< ULong_t bcolor, gcolor, rcolor;
< 
< ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
112d100
< ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
130,131c118
<   // TGTab *fTab = new TGTab(this, 1000, 1000);
<   TGLayoutHints *fLayout = new TGLayoutHints(kLHintsCenterX | kLHintsExpandX, 10, 10, 10, 10);
---
>   TGLayoutHints *fLayout = new TGLayoutHints(kLHintsNormal | kLHintsExpandX, 10, 10, 10, 10);
138,142d124
<   
<   gClient->GetColorByName("red", rcolor);
<   gClient->GetColorByName("blue", bcolor);
<   gClient->GetColorByName("green", gcolor);
< 
163,168d144
< 
<     //Page Label
<     const TGFont *font = gClient->GetFont("-*-times-medium-r-normal-*-34-*-*-*-*-*-*-*");
<     if (!font)
<       font = gClient->GetResourcePool()->GetDefaultFont();
<     FontStruct_t labelfont = font->GetFontStruct();
170,175c146,148
<     gval.fMask = kGCBackground | kGCFont | kGCForeground;
<     gval.fFont = font->GetFontHandle();
<     gClient->GetColorByName("black", gval.fBackground);
<     //GContext_t labelgc = gVirtualX->CreateGC(gClient->GetRoot()->GetId(), &gval);
<     TGGC* labelgc = gClient->GetGC(&gval,kTRUE);
<    
---
>     gval.fMask = kGCForeground;
>     gClient->GetColorByName("black", gval.fForeground);
>     GContext_t labelgc = gVirtualX->CreateGC(gClient->GetRoot()->GetId(), &gval);
181c154
<     fLpage = new TGLabel(tgcf, new TGString(pagename.c_str()),labelgc->GetGC(),labelfont);
---
>     fLpage = new TGLabel(tgcf, new TGString(pagename.c_str()),labelgc);
183,184d155
< 
<     //Detector Labels and Data Text Boxes
214,224c185,186
< 
< 	  const TGFont *bfont = gClient->GetFont("-*-times-medium-r-normal-*-34-*-*-*-*-*-*-*");
< 	  if (!bfont)
< 	    bfont = gClient->GetResourcePool()->GetDefaultFont();
< 	  FontStruct_t buttonfont = bfont->GetFontStruct();
< 	  fButton1->SetFont(buttonfont);
< 	  fButton1->SetTextColor(bcolor);
< 	  //fButton1->Resize(45,45);
< 	  fr->AddFrame(fButton1, fLayout);
<           
< 	  fButton1->Associate(this);
---
>           fr->AddFrame(fButton1, fLayout);
>           fButton1->Associate(this);
227,228d188
< 	  txtpair.second->SetFont(buttonfont);
< 	  txtpair.second->Resize(45,45);
230c190
< 	  fr->AddFrame(fDataEntry[index],fLayout);
---
> 	  fr->AddFrame(fDataEntry[index],fLayout);             
234c194
<     }       
---
>      }       
236,242d195
< 
<   //Bottom Portion of GUI
<   const TGFont *cfont = gClient->GetFont("-*-times-medium-r-normal-*-25-*-*-*-*-*-*-*");
<   if (!cfont)
<     cfont = gClient->GetResourcePool()->GetDefaultFont();
<   FontStruct_t newbuttonfont = cfont->GetFontStruct();
<   
245,247c198,199
<     new TGGroupFrame(this, new TGString("Click channel button for history plot.  Click ''Show Rates'' or ''Show Counts''"));
<   //fGb->SetFont(newbuttonfont);
<   TGCompositeFrame *fGCb = new TGCompositeFrame(fGb, 20, 0, kHorizontalFrame);
---
>      new TGGroupFrame(this, new TGString("Click channel button for history plot.  Click ``Show Rates'' or ``Show Counts''"));
>   TGCompositeFrame *fGCb = new TGCompositeFrame(fGb, 10, 0, kHorizontalFrame);
250d201
<   
253,254d203
<   fHelp->SetFont(newbuttonfont);
<   fHelp->SetTextColor(bcolor);
257d205
<   
260,261d207
<   fQuit->SetFont(newbuttonfont);
<   fQuit->SetTextColor(bcolor);
264,270c210
< 
<   const TGFont *dfont = gClient->GetFont("-*-times-bold-r-normal-*-34-*-*-*-*-*-*-*");
<   if (!dfont)
<     dfont = gClient->GetResourcePool()->GetDefaultFont();
<   FontStruct_t checkfont = dfont->GetFontStruct();
<   
<   TGLabel *fGlabel2 = new TGLabel(fGCb, new TGString("                                                                                                              "));
---
>   TGLabel *fGlabel2 = new TGLabel(fGCb, new TGString("                              "));
272,273c212
<   
<   TGHotString *fHString1 = new TGHotString("Show Rates (in Hz)"); 
---
>   TGHotString *fHString1 = new TGHotString("Show Rates"); 
275,277d213
<   fRateSelect->SetFont(checkfont);
<   fRateSelect->SetTextColor(gcolor);
<   //fRateSelect->Resize(100,100);
281d216
<   
284,285d218
<   fCountSelect->SetFont(checkfont);
<   fCountSelect->SetTextColor(rcolor);
297c230
<   Resize(1500,yboxsize[0]);
---
>   Resize(900,yboxsize[0]);
302d234
< ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
329d260
< ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
333c264
<       Resize(1500,yboxsize[parm1]);
---
>       Resize(900,yboxsize[parm1]);
352,353d282
< 	fRateSelect->SetTextColor(gcolor);
< 	fCountSelect->SetTextColor(rcolor);
355c284
<     case SCAL_NUMBANK*SCAL_NUMCHAN+OFFSET_COUNT:
---
>       case SCAL_NUMBANK*SCAL_NUMCHAN+OFFSET_COUNT:
358,359d286
< 	fRateSelect->SetTextColor(rcolor);
< 	fCountSelect->SetTextColor(gcolor);
368d294
< ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
371c297
<   fHelpDialog->SetText("xscaler++ treats the data from one bank\nof scalers (e.g. L-arm, R-arm, etc).\nUsage:\nxscaler [bankgroup]\nTo view a recent history of updates, press on\nthe button corresponding to the channel and\na canvas will pop up.\nClick ``Show Rates'' or ``Show Counts'' to switch\nbetween rate display and accumulated counts.\n\nSupport: Barak Schmookler (MIT)\n         Robert Michaels (JLab Hall A)\nDocumentation:\nhallaweb.jlab.org/equipment/daq/THaScaler.html");
---
>   fHelpDialog->SetText("xscaler++ treats the data from one bank\nof scalers (e.g. L-arm, R-arm, etc).\nUsage:\nxscaler [bankgroup]\nTo view a recent history of updates, press on\nthe button corresponding to the channel and\na canvas will pop up.\nClick ``Show Rates'' or ``Show Counts'' to switch\nbetween rate display and accumulated counts.\n\nSupport: Robert Michaels, JLab Hall A\nDocumentation:\nhallaweb.jlab.org/equipment/daq/THaScaler.html");
415c341
<                sprintf(value,"%-6.3e",rate);
---
>                sprintf(value,"%-6.3e Hz",rate);
445,465c371
<   static float upd = UPDATE_TIME/1000;
<   
<   Int_t crate = scaler->GetCrate();
<   TString specname;
<   if (crate==8) specname = "Left-HRS";
<   if (crate==7) specname = "Right-HRS";
< 
< 
<   Int_t page;
<   page = TMath::FloorNint((float)index/32);
<   Int_t slot= slotmap[page];
<   Int_t chan = index % 32;
<   
<   TString buttonname = "none";
<   if (scaler->GetDataBase()) { 
<     std::vector<std::string> strb = 
<       scaler->GetDataBase()->GetShortNames(crate,slot,chan);
<     buttonname = strb[0];
<   }
<   if (buttonname== "none") buttonname="Empty Channel";
< 	  
---
>   static float upd = UPDATE_TIME/1000;  
467,503c373,387
<     sprintf(timecut,"%6.1f-UpdateNum<%d",
< 	    fDataHistory[index]->GetMaximum("UpdateNum"),TIME_CUT);        
<     TCut tc(timecut);
<     if (showselect == SHOWRATE) {
<       sprintf(ctit,"RECENT HISTORY of RATE (Hz) updated every %2.0f sec",upd);
<       TCanvas *c1 = new TCanvas("Rate",ctit,500,400);
<       //fDataHistory[index]->SetMarkerColor(4);
<       //fDataHistory[index]->SetMarkerStyle(21);
<       fDataHistory[index]->Draw("Rate:UpdateNum",tc,"scat");
<       //TGraph* gr = (TGraph*)gPad->GetPrimitive("Graph");
<       TH2F * h =(TH2F*)gPad->GetPrimitive("htemp");
<       if(h){
< 	//h->SetTitle(Form("Test %d",index));
< 	h->SetTitle(Form("%s %s Rate",specname.Data(),buttonname.Data()));
< 	h->SetMarkerColor(4);
< 	h->SetMarkerStyle(21);
< 	//h->SetStats(0);
<       }
<       c1->Update();
<       
<       
<     } else {
<       sprintf(ctit,"RECENT HISTORY of COUNTS updated each %3.0f sec",upd);
<       TCanvas *c1 = new TCanvas("Rate",ctit,500,400);
<       //fDataHistory[index]->SetMarkerColor(2);
<       //fDataHistory[index]->SetMarkerStyle(22);
<       fDataHistory[index]->Draw("Count:UpdateNum",tc,"scat");
<       TH2F * h =(TH2F*)gPad->GetPrimitive("htemp");
<       if(h){
< 	    //h->SetTitle(Form("Test %d",index));
< 	h->SetTitle(Form("%s %s Counts",specname.Data(),buttonname.Data()));
< 	h->SetMarkerColor(2);
< 	h->SetMarkerStyle(22);
< 	//h->SetStats(0);
<       }
<       c1->Update();
< 	    
---
>       sprintf(timecut,"%6.1f-UpdateNum<%d",
>          fDataHistory[index]->GetMaximum("UpdateNum"),TIME_CUT);        
>       TCut tc(timecut);
>       if (showselect == SHOWRATE) {
>   	  sprintf(ctit,"RECENT HISTORY of RATE (Hz) updated each %3.0f sec",upd);
> 	  TCanvas *c1 = new TCanvas("Rate",ctit,500,400);
>           fDataHistory[index]->SetMarkerColor(4);
>           fDataHistory[index]->SetMarkerStyle(21);
>           fDataHistory[index]->Draw("Rate:UpdateNum",tc);
>       } else {
>   	  sprintf(ctit,"RECENT HISTORY of COUNTS updated each %3.0f sec",upd);
> 	  TCanvas *c1 = new TCanvas("Rate",ctit,500,400);
>           fDataHistory[index]->SetMarkerColor(2);
>           fDataHistory[index]->SetMarkerStyle(22);
>           fDataHistory[index]->Draw("Count:UpdateNum",tc);
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/THaScalerGui.h ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/THaScaler.h ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/tscalasy_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/tscaldtime_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/tscalevt_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/tscalfbk_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/tscalfile_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/tscalgui_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/tscalhist_main.C ******
 
76,77c76,77
<      double curr_u3  = (scaler.GetBcm("bcm_u3")/time_sec - off_u3)/calib_u3;
<      double curr_d10 = (scaler.GetBcm("bcm_d10")/time_sec - off_d10)/calib_d10;
---
>      double curr_u3  = (scaler.GetBcm("bcm_ux3")/time_sec - off_u3)/calib_u3;
>      double curr_d10 = (scaler.GetBcm("bcm_dx10")/time_sec - off_d10)/calib_d10;
83c83
<           scaler.GetTrig(6), scaler.GetTrig(7),scaler.GetNormData(0,12));
---
>           scaler.GetTrig(6), scaler.GetTrig(7),scaler.GetNormData(0,14));
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/tscalntup_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/tscalonl_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/tscalring_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/tscalroc11_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/baraks/scaler/barak_scaler/x.C ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/haScal_LinkDef.h ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/Makefile ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/THaScaler.C ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/THaScalerDB.C ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/THaScalerDB.h ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/THaScalerGui.C ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/THaScalerGui.h ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/THaScaler.h ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/tscalasy_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/tscaldtime_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/tscalevt_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/tscalfbk_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/tscalfile_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/tscalgui_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/tscalhist_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/tscalntup_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/tscalonl_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/tscalring_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/tscalroc11_main.C ******
 
****** file: /adaqfs/home/a-onl/gmp/scaler/hana_scaler/x.C ******
 
